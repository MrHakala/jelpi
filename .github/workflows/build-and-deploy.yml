name: Build and deploy

on:
  release:
    types: [published]

jobs:
  build:
    name: Node ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 1
      matrix:
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Build container
      run: |
          RELEASE_TAG=$(echo $GITHUB_REF | cut -d '/' -f3)
          docker login docker.pkg.github.com --username mcsneaky --password ${{ secrets.REGISTRY_ACCESS_TOKEN }}
          docker build -t docker.pkg.github.com/eka-foundation/jelpi/core:$RELEASE_TAG .
          docker push docker.pkg.github.com/eka-foundation/jelpi/core:$RELEASE_TAG

    - name: Deploy to production
      uses: appleboy/ssh-action@master
      env:
        APP_KEY: ${{ secrets.APP_KEY }}
        FB_CLIENT_ID: ${{ secrets.FB_CLIENT_ID }}
        FB_CLIENT_SECRET: ${{ secrets.FB_CLIENT_SECRET }}
        REGISTRY_ACCESS_TOKEN: ${{ secrets.REGISTRY_ACCESS_TOKEN }}
      with:
        host: ec2-34-229-75-235.compute-1.amazonaws.com
        username: ubuntu
        command_timeout: 5m
        key: ${{ secrets.SERVER_ACCESS_KEY }}
        envs: GITHUB_REF,APP_KEY,FB_CLIENT_ID,FB_CLIENT_SECRET,REGISTRY_ACCESS_TOKEN
        script: |
          docker login docker.pkg.github.com --username mcsneaky --password $REGISTRY_ACCESS_TOKEN
          docker pull docker.pkg.github.com/eka-foundation/jelpi/core:$(echo $GITHUB_REF | cut -d '/' -f3)
          docker stop jelpi-core; docker rm jelpi-core;
          docker run -d -p 127.0.0.1:3333:3333 --name jelpi-core --restart always \
            -v ${PWD}/jelpi-db:/home/node/app/database/db \
            -e APP_KEY=${APP_KEY} \
            -e DB_DATABASE=jelpi \
            -e FB_CLIENT_ID=${FB_CLIENT_ID} \
            -e FB_CLIENT_SECRET=${FB_CLIENT_SECRET} \
            docker.pkg.github.com/eka-foundation/jelpi/core:$(echo $GITHUB_REF | cut -d '/' -f3)
          sleep 5; docker exec jelpi-core node ace migration:run --force
